#tag Class
Protected Class iOSLibSKRange
Inherits iOSLibObject
	#tag Method, Flags = &h1021
		Private Sub Constructor()
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		 Shared Function Unlimited() As iOSLibSKRange
		  Declare function rangeWithNoLimits lib SpriteKit selector "rangeWithNoLimits" (id as ptr) as ptr
		  dim result as new iOSLibSKRange (rangeWithNoLimits(ClassPtr))
		  result.RetainClassObject
		  return result
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		 Shared Function WithLimits(LowerLimit as Double, UpperLimit as Double) As iOSLibSKRange
		  dim result as iOSLibSKRange
		  #if Target64Bit
		    Declare function rangeWithLowerLimitupperLimit lib SpriteKit selector "rangeWithLowerLimit:upperLimit:" (id as ptr, lower as double, upper as double) as ptr
		  #elseif Target32Bit
		    Declare function rangeWithLowerLimitupperLimit lib SpriteKit selector "rangeWithLowerLimit:upperLimit:" (id as ptr, lower as single, upper as single) as ptr
		  #endif
		  result = new iOSLibSKRange (rangeWithLowerLimitupperLimit(ClassPtr, LowerLimit, UpperLimit))
		  result.RetainClassObject
		  return result
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		 Shared Function WithValueAndVariance(Value as Double, Variance as Double) As iOSLibSKRange
		  dim result as iOSLibSKRange
		  #if Target64Bit
		    Declare function rangeWithValue lib SpriteKit selector "rangeWithValue:variance:" (id as ptr, lower as double, upper as double) as ptr
		  #elseif Target32Bit
		    Declare function rangeWithValue lib SpriteKit selector "rangeWithValue:variance:" (id as ptr, lower as single, upper as single) as ptr
		  #endif
		  result = new iOSLibSKRange (rangeWithValue(ClassPtr, value, Variance))
		  result.RetainClassObject
		  return result
		  
		End Function
	#tag EndMethod


	#tag ComputedProperty, Flags = &h1
		#tag Getter
			Get
			  static mClassPtr as Ptr
			  if mClassPtr = nil then
			    if iOSLibSKView.SpriteKitEnabled then
			      mClassPtr  =  NSClassFromString ("SKRange")
			    end if
			  end if
			  return mClassPtr
			End Get
		#tag EndGetter
		Protected Shared ClassPtr As Ptr
	#tag EndComputedProperty


	#tag ViewBehavior
		#tag ViewProperty
			Name="DebugDescription"
			Group="Behavior"
			Type="Text"
		#tag EndViewProperty
		#tag ViewProperty
			Name="HasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="IsNIL"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="mHasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
